// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

// Node interface
type Node interface {
	IsNode()
}

// All Components in a Titan system have this data
type TitanComponent interface {
	IsTitanComponent()
}

// Active State of A Band
type Active struct {
	ID     string `json:"id"`
	Active bool   `json:"active"`
}

func (Active) IsNode() {}

// Input payload for adding a Wristband
type AddWristbandInput struct {
	Tic         string  `json:"tic"`
	Name        *string `json:"name"`
	DateOfBirth string  `json:"dateOfBirth"`
	OnOxygen    bool    `json:"onOxygen"`
	Pregnant    bool    `json:"pregnant"`
	Child       bool    `json:"child"`
	Department  string  `json:"department"`
}

// Alert driven by Individual Vital Scores
type Alert struct {
	ID           string               `json:"id"`
	SensorData   *WristbandSensorData `json:"sensorData"`
	Level        string               `json:"level"`
	Target       string               `json:"target"`
	OverallLevel string               `json:"overallLevel"`
	Overall      int                  `json:"overall"`
	Trend        string               `json:"trend"`
}

func (Alert) IsNode() {}

// A Bridge is the RF to ethernet converter
type Bridge struct {
	ID      string `json:"id"`
	Msid    int    `json:"msid"`
	Type    int    `json:"type"`
	TypeVer int    `json:"typeVer"`
	Key     string `json:"key"`
	Tic     string `json:"tic"`
}

func (Bridge) IsNode()           {}
func (Bridge) IsTitanComponent() {}

// Bridge signal strength as recorded by the Wristband
type BridgeSignal struct {
	Bridge *Bridge `json:"bridge"`
	Signal int     `json:"signal"`
}

// Input payload for deactivating a Wristband
type DeactivateWristbandInput struct {
	ID string `json:"id"`
}

// A Gateway is the server that receives the data from the Wristbands
type Gateway struct {
	ID      string `json:"id"`
	Msid    int    `json:"msid"`
	Type    int    `json:"type"`
	TypeVer int    `json:"typeVer"`
	Key     string `json:"key"`
	Tic     string `json:"tic"`
}

func (Gateway) IsNode()           {}
func (Gateway) IsTitanComponent() {}

type Level struct {
	ID   string `json:"id"`
	Text string `json:"text"`
}

func (Level) IsNode() {}

// Input payload for moving a Wristband
type MoveWristbandInput struct {
	Department string `json:"department"`
}

// Calculated NEWS2 scores
type News2 struct {
	Respiration   int  `json:"respiration"`
	Sp02          int  `json:"sp02"`
	OnOxygen      bool `json:"onOxygen"`
	Pulse         int  `json:"pulse"`
	Temperature   int  `json:"temperature"`
	BloodPressure *int `json:"bloodPressure"`
	Motion        bool `json:"motion"`
	Overall       int  `json:"overall"`
}

// Summary of All Emergency Levels
type Summary struct {
	High      int `json:"high"`
	Medium    int `json:"medium"`
	LowMedium int `json:"lowMedium"`
	Low       int `json:"low"`
	Other     int `json:"other"`
}

// All information for a specific health wristband
type Wristband struct {
	ID          string           `json:"id"`
	Msid        int              `json:"msid"`
	Type        int              `json:"type"`
	TypeVer     int              `json:"typeVer"`
	Key         string           `json:"key"`
	Tic         string           `json:"tic"`
	Active      bool             `json:"active"`
	Activated   *string          `json:"activated"`
	Deactivated *string          `json:"deactivated"`
	Data        []*WristbandData `json:"data"`
	Name        *string          `json:"name"`
	DateOfBirth string           `json:"dateOfBirth"`
	OnOxygen    bool             `json:"onOxygen"`
	Pregnant    bool             `json:"pregnant"`
	Child       bool             `json:"child"`
	Department  string           `json:"department"`
}

func (Wristband) IsNode()           {}
func (Wristband) IsTitanComponent() {}

// Data captured by the wristband at a specific time
type WristbandData struct {
	ID           string               `json:"id"`
	Wristband    *Wristband           `json:"wristband"`
	Time         string               `json:"time"`
	SensorData   *WristbandSensorData `json:"sensorData"`
	News2        *News2               `json:"news2"`
	Location     []*BridgeSignal      `json:"location"`
	BatteryLevel int                  `json:"batteryLevel"`
}

func (WristbandData) IsNode() {}

// Data captured from the Wristband sensors
type WristbandSensorData struct {
	Respiration   int     `json:"respiration"`
	Sp02          int     `json:"sp02"`
	Pulse         int     `json:"pulse"`
	Temperature   float64 `json:"temperature"`
	BloodPressure int     `json:"bloodPressure"`
	Motion        bool    `json:"motion"`
	Proximity     bool    `json:"proximity"`
}
